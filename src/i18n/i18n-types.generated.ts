// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType & DisallowNamespaces
export type BaseLocale = 'en'

export type Locales =
	| 'en'

export type Translation = RootTranslation & DisallowNamespaces

export type Translations = RootTranslation &
{
	common: NamespaceCommonTranslation,
	config: NamespaceConfigTranslation
}

type RootTranslation = {
	/**
	 * S​T​L​ ​O​r​g​a​n​i​z​e​r
	 */
	title: string
}

export type NamespaceCommonTranslation = {
	actions: {
		/**
		 * C​a​n​c​e​l
		 */
		cancel: string
		/**
		 * S​a​v​e
		 */
		save: string
	}
}

export type NamespaceConfigTranslation = {
	form: {
		/**
		 * O​u​t​p​u​t​ ​f​o​l​d​e​r​!
		 */
		outputFolder: string
		/**
		 * T​e​m​p​ ​F​o​l​d​e​r
		 */
		tempFolder: string
		/**
		 * M​a​x​ ​T​h​r​e​a​d​s
		 */
		maxThreads: string
		/**
		 * A​u​t​o​ ​P​r​o​c​e​s​s​ ​o​n​ ​S​c​a​n
		 */
		autoProcessOnScan: string
		/**
		 * A​u​t​o​ ​A​r​c​h​i​v​e​ ​o​n​ ​C​o​m​p​l​e​t​e
		 */
		autoArchiveOnComplete: string
		/**
		 * U​s​e​ ​M​u​l​t​i​t​h​r​e​a​d​i​n​g
		 */
		useMultithreading: string
		/**
		 * D​e​b​u​g​ ​M​o​d​e
		 */
		debugMode: string
	}
}

export type Namespaces =
	| 'common'
	| 'config'

type DisallowNamespaces = {
	/**
	 * reserved for 'common'-namespace\
	 * you need to use the `./common/index.ts` file instead
	 */
	common?: "[typesafe-i18n] reserved for 'common'-namespace. You need to use the `./common/index.ts` file instead."

	/**
	 * reserved for 'config'-namespace\
	 * you need to use the `./config/index.ts` file instead
	 */
	config?: "[typesafe-i18n] reserved for 'config'-namespace. You need to use the `./config/index.ts` file instead."
}

export type TranslationFunctions = {
	/**
	 * STL Organizer
	 */
	title: () => LocalizedString
	common: {
		actions: {
			/**
			 * Cancel
			 */
			cancel: () => LocalizedString
			/**
			 * Save
			 */
			save: () => LocalizedString
		}
	}
	config: {
		form: {
			/**
			 * Output folder!
			 */
			outputFolder: () => LocalizedString
			/**
			 * Temp Folder
			 */
			tempFolder: () => LocalizedString
			/**
			 * Max Threads
			 */
			maxThreads: () => LocalizedString
			/**
			 * Auto Process on Scan
			 */
			autoProcessOnScan: () => LocalizedString
			/**
			 * Auto Archive on Complete
			 */
			autoArchiveOnComplete: () => LocalizedString
			/**
			 * Use Multithreading
			 */
			useMultithreading: () => LocalizedString
			/**
			 * Debug Mode
			 */
			debugMode: () => LocalizedString
		}
	}
}

export type Formatters = {}
